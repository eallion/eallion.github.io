<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>代码 on 大大的小蜗牛</title><link>https://eallion.com/posts/code/</link><description>Recent content in 代码 on 大大的小蜗牛</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 14 Apr 2006 00:00:00 +0000</lastBuildDate><atom:link href="https://eallion.com/posts/code/index.xml" rel="self" type="application/rss+xml"/><item><title>KMS Windows 激活服务器</title><link>https://eallion.com/kms/</link><pubDate>Wed, 04 Nov 2020 12:51:22 +0800</pubDate><guid>https://eallion.com/kms/</guid><description>最近因朋友需要激活 Windows 10 ，拉了个 Docker 镜像，建了个激活服务器。 服务器地址 kms.eallion.com 激活服务器部署在腾讯云香港轻量云服务器上，此网页能打开则表示激活服务可用。 只支持激活 VOL 版本的 Windows 和 Office。 KMS 方式激活，激活一次其有效期只有 180 天，每隔一段时间系统会自动向 KMS 服务器请求续期。 源码 Docker 镜像源码：htt</description></item><item><title>Ubuntu 20.10 优化</title><link>https://eallion.com/ubuntu2010/</link><pubDate>Fri, 23 Oct 2020 10:25:00 +0000</pubDate><guid>https://eallion.com/ubuntu2010/</guid><description>安装 Ubuntu 后的 20 件事 实机安装 桌面效果截图 （查看大图） 最近搞挂了一块数据盘，刚好在 Ubuntu 20.10 的发行时间点，索性重装 Ubuntu。 本文主要为备忘。切勿照搬命令。建议最小化安装。 基础优化 1、换软件源 推荐清华大学的源 https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ 个人的备份源 https://raw.githubusercontent.com/eallion/dotfiles/ubuntu/sources.list sudo mv /etc/apt/sources.list /etc/apt/sources.list.backup wget -c https://raw.githubusercontent.com/eallion/dotfiles/ubuntu/sources.list -O /etc/apt/sources.list 然后 update 一下： sudo apt update sudo apt upgrade 2、系统设置 在系统设置里</description></item><item><title>关于 Ubuntu</title><link>https://eallion.com/talkaboutubuntu/</link><pubDate>Fri, 23 Oct 2020 10:24:00 +0000</pubDate><guid>https://eallion.com/talkaboutubuntu/</guid><description>关于 Linux 和 Ubuntu 的一点愚见。 个人长期使用过 Ubuntu、Debian、Gentoo，体验过 Fedora、Manjaro、Archlinux、Deepin 等流行的发行版最少的时间也有一周以上。 关于推荐使用什么 Linux 发行版，如果你的目的是“日常使用的桌面环境”，我依然首推 Ubuntu！ Linux 的创始</description></item><item><title>Ubuntu ZFS 原生全盘加密</title><link>https://eallion.com/ubuntu-zfs-root-encryption/</link><pubDate>Fri, 11 Sep 2020 23:48:35 +0800</pubDate><guid>https://eallion.com/ubuntu-zfs-root-encryption/</guid><description>前言 Ubuntu 20.04 的安装镜像支持 ZFS 文件系统（从19.10就开始支持了）： 但是如果选择此项安装时，默认就没有全盘加密功能了。 本文介绍如何安装 Ubuntu 到 ZFS 文件系统时使用原生加密。 可加密 Root Boot 等目录。 比《Ubuntu ZFS 加密 Home 目录》更优秀。 步骤 1、下载 Ubuntu 20.04 镜像，按常规方法制作 U 盘 LiveCD。 https://releases.ubuntu.com/ 2、通过 U</description></item><item><title>Ubuntu ZFS 加密 Home 目录</title><link>https://eallion.com/ubuntu-zfs-encryption/</link><pubDate>Fri, 11 Sep 2020 22:37:13 +0800</pubDate><guid>https://eallion.com/ubuntu-zfs-encryption/</guid><description>前言 Ubuntu 20.04 的安装镜像支持 ZFS 文件系统： 本文是安装后加密 ZFS Home 目录的备忘教程。 另外有安装前加密 ZFS Root 文件系统的备忘教程。链接：《Ubuntu ZFS 原生全盘加密》 步骤： 1、安装时创建一个随意的临时账号，或者安装完成后，新建一个临时管理员用户，暂且把这个账号叫做：tempuser，并把它设置为自动</description></item><item><title>Ubuntu 20.04.1 配置 LNMP 本地环境备忘</title><link>https://eallion.com/ubuntu2004lnmp/</link><pubDate>Wed, 26 Aug 2020 03:47:38 +0800</pubDate><guid>https://eallion.com/ubuntu2004lnmp/</guid><description>本文主要记录在 Ubuntu 20.04.1 Desktop 版本中配置 Nginx、Mysql、PHP、phpMyAdmin。 提示：如果不太了解各项配置的意思，切勿在服务器生产环境中按本文配置！ 安装 Nginx 移除老旧或冲突软件 sudo apt purge apache2* php7.0* mysql* phpmyadmin* sudo apt autoremove sudo apt autoclean 如果不能用*完全移除，可输入sudo apt purge apache2-然后按tab键一个一个</description></item><item><title>Ubuntu 20.04 优化</title><link>https://eallion.com/ubuntu2004/</link><pubDate>Mon, 25 May 2020 12:36:00 +0000</pubDate><guid>https://eallion.com/ubuntu2004/</guid><description>实机安装 桌面效果截图 （查看大图） 原来在用 Ubuntu 19.10，通过 do-release-upgrade 升级到 Ubuntu 20.04 后，因为一些配置出现了些奇怪的问题，索性重新安装了一次。记录一下安装优化过程。 基础优化 1、换软件源 在 Dash 里搜索 软件和更新 ，依次点击 Ubuntu软件 - 下载自 - 其他站点 - 中国： 然后选择一个源服务器，推荐阿里云和清华：</description></item><item><title>Typecho 迁移到 Hugo</title><link>https://eallion.com/typecho-to-hugo/</link><pubDate>Wed, 13 May 2020 03:32:44 +0800</pubDate><guid>https://eallion.com/typecho-to-hugo/</guid><description>记录一下从 Typecho 迁移到 Hugo 的过程。 主要是折腾的URL，也就是 slug 和导入评论到 Disqus 的过程。 因为迁移文章时必须保留以前文章的 URL，不然会对自己产生很多不良的影响。 一、Typecho 导出文章 我 Fork 了一份 PHP 脚本，进行了一些修改，适合于像我这种链接形式为： https://example.com + slug 的博客进行导出。这样导出的 Markdown 博文，会在</description></item><item><title>博客迁移到 Hugo</title><link>https://eallion.com/hugo/</link><pubDate>Mon, 11 May 2020 04:43:56 +0800</pubDate><guid>https://eallion.com/hugo/</guid><description>经过了差不多一年的挣扎（实际内心毫无波澜并且好像快忘掉这事了），总算把这个博客从 Typecho 迁移到了静态博客。现在定型为 —— Hugo 最近几年，不知道从什么时候开始，感觉维护 LNMP 类型的博客越来越费精力。 不论是配置 Nginx Mysql 这些服务，还是给服务器做安全维护，还是做数据迁移，都是很繁琐且枯燥的事情，好些台 VPS 轮</description></item><item><title>GitHub Actions 自动部署 Hexo 脚本</title><link>https://eallion.com/github-actions-hexo-ci/</link><pubDate>Sat, 28 Dec 2019 22:53:43 +0000</pubDate><guid>https://eallion.com/github-actions-hexo-ci/</guid><description>前言 网上虽然有很多通过 GitHub Actions 自动部署 Hexo 的教程，但都有各种各样的问题。 主要问题还是 Workflow 脚本没有写正确，比如插件部分。 步骤 1、生成密钥对 （这个也不会的话，方法自行 Google） ssh-keygen -t rsa -b 4096 -f ~/.ssh/GitHub-actions-deploy 然后会获得一个公钥和私钥。 2、在 GitHub Pages 所在的仓库中添加“公钥” 找到仓库的 Settings - Deploye keys - Add deploy key Title 填入：AC</description></item></channel></rss>